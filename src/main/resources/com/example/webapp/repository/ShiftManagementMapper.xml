<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.example.webapp.repository.ShiftManagementMapper">

	<resultMap id="FullCalendarEntityResult"
		type="com.example.webapp.entity.FullCalendarEntity">
		<id property="shiftId" column="id"/>
		<result property="start" column="date" />
		<result property="scheduledStart" column="scheduled_start" />
		<result property="scheduledEnd" column="scheduled_end" />
		<association property="employee" javaType="com.example.webapp.entity.Employee">
			<id property="employeeId" column="employee_id"/>
			<result property="name" column="name"/>
		</association>
	</resultMap>

<!--シフトの表示にしか使ってない-->
	<select id="selectThreeMonthByTargetMonth"
		resultMap="FullCalendarEntityResult">
		SELECT
		  s.id
		  ,s.employee_id
		  ,e.name
		  ,s.date
		  ,s.scheduled_start
		  ,s.scheduled_end
		FROM
		  shift_schedules AS s
		  INNER JOIN employees AS e
		  ON s.employee_id = e.id
		WHERE
		  MONTH(s.date) BETWEEN #{targetMonth} -1 AND #{targetMonth} +1
		;
	</select>

	<select id="selectRequestByEmployeeId"
		resultMap="FullCalendarEntityResult">
		SELECT
		  id
		  ,employee_id
		  ,date
		  ,scheduled_start
		  ,scheduled_end
		FROM
		  shift_requests
		WHERE
		  employee_id = #{employeeId}
		  AND MONTH(date)=MONTH(CURRENT_DATE)+1
		ORDER BY date ASC
		;
	</select>

	<select id="selectAllAfterTodayByEmployeeId"
		resultType="com.example.webapp.entity.ShiftSchedule">
		SELECT
		  id AS shiftId
		  ,date
		FROM
		  shift_schedules
		WHERE
		  employee_id = #{employeeId}
		  AND date &gt;= CURRENT_DATE
		ORDER BY date ASC
		;
	</select>
	
	<select id="selectOneMonthByTargetMonth"
		resultMap="FullCalendarEntityResult">
		SELECT
		  s.id
		  ,s.employee_id
		  ,e.name
		  ,s.date
		  ,s.scheduled_start
		  ,s.scheduled_end
		FROM
		  shift_schedules AS s
		  INNER JOIN employees AS e
		  ON s.employee_id = e.id
		WHERE
		  MONTH(s.date) = #{targetMonth}
		ORDER BY date ASC
		;
	</select>

	<select id="selectAllRequests"
		resultMap="FullCalendarEntityResult">
		SELECT
		  r.id
		  ,r.employee_id
		  ,e.name
		  ,r.date
		  ,r.scheduled_start
		  ,r.scheduled_end
		FROM
		  shift_requests AS r
		  INNER JOIN employees AS e
		  ON r.employee_id = e.id
		WHERE
		  MONTH(date)=MONTH(CURRENT_DATE)+1
		;
	</select>

	<select id="selectNotSubmit">
		SELECT
		  id as employeeId
		  ,name
		FROM
		  employees
		WHERE
		  id NOT IN (
		    SELECT
		      employee_id
		    FROM
		      shift_requests
		  )
		;
	</select>

	<insert id="insertRequest">
		INSERT INTO
		  shift_requests(employee_id, date, scheduled_start, scheduled_end, created_at)
		VALUES
		<foreach collection="requests" item="r" separator=",">
			(#{r.employee.employeeId}, #{r.start}, #{r.scheduledStart}, #{r.scheduledEnd},now())
		</foreach>
		;
	</insert>

	<insert id="insertShift">
		INSERT INTO
		  shift_schedules(employee_id,date,scheduled_start,scheduled_end, created_at)
		VALUES
		<foreach collection="newShifts" item="s" separator=",">
			(#{s.employee.employeeId}, #{s.start}, #{s.scheduledStart}, #{s.scheduledEnd}, now())
		</foreach>
		;
	</insert>

<!--	リクエストの削除-->
	<delete id="deleteOldRequestByEmployeeId">
		DELETE FROM
		  shift_requests
		WHERE
		  date NOT IN (
		  <foreach collection="newRequests" item="r" separator=",">
			  #{r.start}
		  </foreach>		  
		  )
		  AND employee_id=#{employeeId}
		;
	</delete>

<!--シフトの削除-->
	<delete id="deleteOldShiftByMonth">
		DELETE FROM
		  shift_schedules
		WHERE
		  (date,employee_id) NOT IN (
		  <foreach collection="newShifts" item="s" separator=",">
			  (#{s.start},#{s.employee.employeeId})
		  </foreach>		  
		  )
		  AND MONTH(date)=#{targetMonth}
		;
	</delete>
	
	<delete id="deleteAllShiftSchedulesByEmployeeId">
		DELETE FROM
		  shift_schedules
		WHERE
		  employee_id=#{employeeId}
		;
	</delete>
	
	<delete id="deleteAllShiftRequestsByEmployeeId">
		DELETE FROM
		  shift_requests
		WHERE
		  employee_id=#{employeeId}
		;
	</delete>
</mapper>
