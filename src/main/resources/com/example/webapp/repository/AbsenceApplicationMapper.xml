<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.example.webapp.repository.AbsenceApplicationMapper">

	<resultMap
		id="AbsenceApplicationWithShiftScheduleAndEmployeeAndAbsenceResult"
		type="com.example.webapp.entity.AbsenceApplication">
		<id property="applicationId" column="id" />
		<result property="isApprove" column="is_approve" />
		<result property="createdAt" column="created_at" />
		<result property="updatedAt" column="updated_at" />
		<result property="detail" column="detail" />
		<association property="shiftSchedule"
			javaType="com.example.webapp.entity.ShiftSchedule">
			<id property="shiftId" column="shift_id" />
 			<result property="date" column="date"/>
		</association>
		<association property="employee" javaType="com.example.webapp.entity.Employee">
			<id property="name" column="employee_name"/>
		</association>
		<association property="absenceReason" javaType="com.example.webapp.entity.AbsenceReason">
			<id property="name" column="reason_name"/>
		</association>
	</resultMap>

	<select id="selectAll" resultMap="AbsenceApplicationWithShiftScheduleAndEmployeeAndAbsenceResult">
		SELECT
		  aa.id
		  ,aa.shift_id
		  ,s.date
		  ,e.name AS employee_name
		  ,aa.created_at
		  ,aa.updated_at
		  ,aa.is_approve
		  ,ar.name AS reason_name
		  ,aa.detail
		FROM
		  absence_applications AS aa
		  INNER JOIN shift_schedules AS s
		  ON aa.shift_id=s.id
		  INNER JOIN employees AS e
		  ON s.employee_id=e.id
		  INNER JOIN absence_reasons AS ar
		  ON aa.reason_id=ar.id
		ORDER BY aa.id ASC
		;
	</select>
	
	<select id="selectAllByEmployeeId" resultMap="AbsenceApplicationWithShiftScheduleAndEmployeeAndAbsenceResult">
		SELECT
		  aa.id
		  ,aa.shift_id
		  ,s.date
		  ,e.name AS employee_name
		  ,aa.created_at
		  ,aa.updated_at
		  ,aa.is_approve
		  ,ar.name AS reason_name
		  ,aa.detail
		FROM
		  absence_applications AS aa
		  INNER JOIN shift_schedules AS s
		  ON aa.shift_id=s.id
		  INNER JOIN employees AS e
		  ON s.employee_id=e.id
		  INNER JOIN absence_reasons AS ar
		  ON aa.reason_id=ar.id
		WHERE
		  s.employee_id=#{employeeId}
		ORDER BY aa.id ASC
		;
	</select>
	
	<select id="selectTodayAndIsApproveEqualsNull" resultMap="AbsenceApplicationWithShiftScheduleAndEmployeeAndAbsenceResult">
		SELECT
		  aa.id
		  ,e.name AS employee_name
		  ,ar.name AS reason_name
		FROM
		  absence_applications AS aa
		  INNER JOIN shift_schedules AS s
		  ON aa.shift_id=s.id
		  INNER JOIN employees AS e
		  ON s.employee_id=e.id
		  INNER JOIN absence_reasons AS ar
		  ON aa.reason_id=ar.id
		WHERE
		  s.date=CURRENT_DATE
		  AND
		  is_approve is null
		;
	</select>
	
	<select id="selectByApplicationId" resultMap="AbsenceApplicationWithShiftScheduleAndEmployeeAndAbsenceResult">
		SELECT
		  e.name AS employee_name
		  ,s.date
		  ,aa.created_at
		  ,ar.name AS reason_name
		  ,aa.detail
		FROM
		  absence_applications AS aa
		  INNER JOIN shift_schedules AS s
		  ON aa.shift_id=s.id
		  INNER JOIN employees AS e
		  ON s.employee_id=e.id
		  INNER JOIN absence_reasons AS ar
		  ON aa.reason_id=ar.id
		WHERE
		  aa.id=#{applicaionId}
		;
	</select>
	
	<select id="selectAllReasons">
		SELECT
		  id as reasonId
		  ,name
		FROM
		  absence_reasons
		;
	</select>
	
	<insert id="insert">
		INSERT INTO
		  absence_applications(shift_id,reason_id,detail,created_at,updated_at)
		VALUE
		  (#{shiftSchedule.shiftId},#{absenceReason.reasonId},#{detail},now(),now())
		;
	</insert>
	
	<update id="update">
		UPDATE
		  absence_applications
		SET
		  is_approve=#{decision}
		  ,updated_at=now()
		WHERE
		  shift_id=#{shiftId}
		;
	</update>
	
	<delete id="delete">
		DELETE
		FROM
		  absence_applications
		WHERE
		  id=#{applicationId}
		;
	</delete>
	
	<delete id="deleteAll">
		DELETE
		FROM
		  absence_applications
		WHERE
		  shift_id
		IN
		  (
		  SELECT
		    id
		  FROM
		    shift_schedules
		  WHERE
		    employee_id = #{employeeId}
		  )
		;
	</delete>
</mapper>